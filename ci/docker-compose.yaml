version: '3'
services:
  anvil:
    image: linuzeth/aelin-anvil
    command: ["anvil --gas-limit 18446744073709551615 --host 0.0.0.0 --allow-origin '*' --chain-id 5"]
    environment:
      - ANVIL_IP_ADDR=0.0.0.0
    ports:
      - '8545:8545'

  graph-node:
    image: graphprotocol/graph-node
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8020:8020'
      - '8030:8030'
      - '8040:8040'
    depends_on:
      - ipfs
      - postgres
      - anvil 
    environment:
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      ethereum: 'mainnet:http://anvil:8545'
      GRAPH_LOG: info

  ipfs:
    image: ipfs/go-ipfs:v0.10.0
    ports:
      - '5001:5001'

  postgres:
    image: postgres
    ports:
      - '5432:5432'
    command: ['postgres', '-cshared_preload_libraries=pg_stat_statements']
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
      PGDATA: '/var/lib/postgresql/data'
      POSTGRES_INITDB_ARGS: '-E UTF8 --locale=C'

  contracts-deployer:
    image: linuzeth/aelin-contracts-deployer
    command: [". ./deploy-ci.sh"]
    depends_on:
      - anvil
    volumes:
      - 'aelin-envs:/usr/src/app/'

  subgraph-deployer:
    image: linuzeth/aelin-subgraph-deployer
    command: [". ./ci/generate-data.sh && npm run deploy-ci"]
    depends_on:
      contracts-deployer:
        condition: service_completed_successfully
    volumes:
      - 'aelin-envs:/usr/share/'

  aelin-ui:
    build:
      context: ..
      dockerfile: ./ci/Dockerfile
    command: [". ./ci/add-envs.sh && yarn dev"]
    ports:
      - '3000:3000'
    volumes:
      - 'aelin-envs:/usr/share/'
    depends_on:
      subgraph-deployer:
        condition: service_completed_successfully 

volumes:
  aelin-envs: